import java.util.Scanner;

//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Main {
    public static void main(String[] args) {
        //üõë–ó–∞–¥–∞—á–∞ 1: –ß–µ—Ç–Ω–æ–µ –∏–ª–∏ –Ω–µ—á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
//        int num = in.nextInt();
//        if(num % 2 == 0) {
//            System.out.println("–ß–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è —á–µ—Ç–Ω—ã–º");
//        }
//        else {
//            System.out.println("–ß–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ—á–µ—Ç–Ω—ã–º");
//        }
//        in.close();
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 2: –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏–∑ —Ç—Ä–µ—Ö —á–∏—Å–µ–ª
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞: ");
//        int a = in.nextInt();
//        int b = in.nextInt();
//        int c = in.nextInt();
//        int min = Math.min(a, Math.min(b, c));
//        System.out.println("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: " + min);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 3: –¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è
//        System.out.print("–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 5:");
//        for (int i = 1; i <= 10; i++){
//            System.out.println("5 * " + i + " = " + (5 * i));
//        }
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 4: –°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ N
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —á–∏—Å–ª–æ: ");
//        int n = in.nextInt();
//        int sum = n * (n + 1)/2;
//        System.out.print("–°—É–º–º–∞ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ " + n + " : " + sum);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 5: –ß–∏—Å–ª–æ –§–∏–±–æ–Ω–∞—á—á–∏
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —á–∏—Å–ª–æ: ");
//        int n = in.nextInt();
//        int a = 0;
//        int b = 1;
//        System.out.print("–ü–µ—Ä–≤—ã–µ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏ –¥–ª—è —á–∏—Å–ª–∞ " + n + ": ");
//        for (int i = 0; i < n; i++) {
//            System.out.print(a + " ");
//            int fn = a + b;
//            a = b;
//            b = fn;
//        }
//        System.out.println();
//        in.close();
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —á–∏—Å–ª–∞
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —á–∏—Å–ª–æ: ");
//        int n = in.nextInt(); boolean isPrime = true;
//        if (n <= 1) {
//            isPrime = false;
//        }
//        for(int i = 2; i < Math.sqrt(n); i++){
//            if(n % i == 0){
//                isPrime = false;
//                break;
//            }
//        }
//        System.out.println(n + (isPrime ? " —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º —á–∏—Å–ª–æ–º" : " –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º —á–∏—Å–ª–æ–º"));
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 7: –û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —á–∏—Å–µ–ª
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —á–∏—Å–ª–æ: ");
//        int n = in.nextInt();
//        System.out.print("–û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —á–∏—Å–µ–ª –æ—Ç " + n + " –¥–æ 1: ");
//        for(int i = n; i >= 1; i--){
//            System.out.print(i + " ");
//        }
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 8: –°—É–º–º–∞ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —á–∏—Å–ª–æ: ");
//        int a = in.nextInt();
//        int b = in.nextInt();
//        int c = 0;
//
//        for(int i = a; i <= b; i++){
//            if (i % 2 == 0) {
//                c += i;
//            }
//        }
//        System.out.println("–°—É–º–º–∞ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç " + a + " –¥–æ " + b + ": " + c);
//        }
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 9: –†–µ–≤–µ—Ä—Å —Å—Ç—Ä–æ–∫–∏
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ");
//        String str = in.nextLine();
//        String reversed = new StringBuilder(str).reverse().toString();
//        System.out.println("–û–±—Ä–∞—Ç–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: " + reversed);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 10: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ —á–∏—Å–ª–µ
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
//        String number = in.nextLine();
//        int digitCount = number.replace("-", "").length();
//        System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ —á–∏—Å–ª–µ " + number + ": " + digitCount);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 11: –§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ N: ");
//        int n = in.nextInt();
//        long factorial = 1;
//        for (int i = 1; i <= n; i++) {
//            factorial *= i;
//        }
//        System.out.println("–§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ " + n + " —Ä–∞–≤–µ–Ω " + factorial);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 12: –°—É–º–º–∞ —Ü–∏—Ñ—Ä —á–∏—Å–ª–∞
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
//        int number = in.nextInt();
//        int sum = 0;
//        number = Math.abs(number);
//        while (number > 0) {
//            sum += number % 10;
//            number /= 10;
//        }
//        System.out.println("–°—É–º–º–∞ —Ü–∏—Ñ—Ä —á–∏—Å–ª–∞: " + sum);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 13: –ü–∞–ª–∏–Ω–¥—Ä–æ–º
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ");
//        String str = in.nextLine();
//        String reversed = new StringBuilder(str).reverse().toString();
//        if(reversed.equals(str)){
//            System.out.println("–°—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.");
//        } else {
//            System.out.println("–°—Ç—Ä–æ–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.");
//        }
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 14: –ù–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞: ");
//        int size = in.nextInt();
//        int[] array = new int[size];
//        System.out.println("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞:");
//        for (int i = 0; i < size; i++) {
//            array[i] = in.nextInt();
//        }
//        int max = array[0];
//        for (int num : array) {
//            if (num > max) {
//                max = num;
//            }
//        }
//        System.out.println("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ: " + max);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 15: –°—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞: ");
//        int size = in.nextInt();
//        int[] array = new int[size];
//        System.out.println("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞:");
//        for (int i = 0; i < size; i++) {
//            array[i] = in.nextInt();
//        }
//        int sum = 0;
//        for (int num : array) {
//            sum += num;
//        }
//        System.out.println("–°—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞: " + sum);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 16: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞: ");
//        int size = in.nextInt(); int[] array = new int[size];
//        System.out.println("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞:");
//        for (int i = 0; i < size; i++) {
//            array[i] = in.nextInt();
//        }
//        int positiveCount = 0, negativeCount = 0;
//        for (int num : array) {
//            if (num > 0) positiveCount++;
//            else if (num < 0) negativeCount++;
//        }
//        System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª: " + positiveCount);
//        System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª: " + negativeCount);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 17: –ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ A –∏ B: ");
//        int A = in.nextInt();
//        int B = in.nextInt();
//
//        System.out.println("–ü—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç " + A + " –¥–æ " + B + ":");
//        for (int i = A; i <= B; i++) {
//            if (isPrime(i)) {
//                System.out.print(i + " ");
//            }
//        }
//    }
//    private static boolean isPrime(int num) {
//        if (num < 2) return false;
//        for (int i = 2; i <= Math.sqrt(num); i++) {
//            if (num % i == 0) return false;
//        }
//        return true;
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 18: –ü–æ–¥—Å—á–µ—Ç –≥–ª–∞—Å–Ω—ã—Ö –∏ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö –≤ —Å—Ç—Ä–æ–∫–µ
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ");
//        String input = in.nextLine().toLowerCase();
//        int vowelCount = 0, consonantCount = 0;
//        for (char ch : input.toCharArray()) {
//            if (Character.isLetter(ch)) {
//                if ("aeiouyAEIOUY–∞–µ—ë–∏–æ—É—ã—ç—é—è–ê–ï–Å–ò–û–£–´–≠–Æ–Ø".indexOf(ch) != -1)
//                {
//                    vowelCount++;
//                } else
//                {
//                    consonantCount++;
//                }
//            }
//        }
//        System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞—Å–Ω—ã—Ö: " + vowelCount);
//        System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö: " + consonantCount);
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 19: –ü–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤: ");
//        String n = in.nextLine();
//        String[] words = n.split(" ");
//        StringBuilder reversed = new StringBuilder();
//        for (int i = words.length - 1; i >= 0; i--) {
//            reversed.append(words[i]);
//            if (i != 0) reversed.append(" ");
//        }
//        System.out.println("–°–ª–æ–≤–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: " + reversed.toString());
//////////////////////////////////////////////////////

        //üõë–ó–∞–¥–∞—á–∞ 20: –ß–∏—Å–ª–æ –ê—Ä–º—Å—Ç—Ä–æ–Ω–≥–∞
//        Scanner in = new Scanner(System.in);
//        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
//        int num = in.nextInt();
//        int originalNumber = num;
//        int sum = 0;
//        int digitsCount = String.valueOf(num).length();
//        while (num > 0) {
//            int digit = num % 10;
//            sum += Math.pow(digit, digitsCount);
//            num /= 10;
//        }
//        if (sum == originalNumber) {
//            System.out.println(originalNumber + " —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –ê—Ä–º—Å—Ç—Ä–æ–Ω–≥–∞!");
//        } else {
//            System.out.println(originalNumber + " –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –ê—Ä–º—Å—Ç—Ä–æ–Ω–≥–∞!");
//        }
    }
}